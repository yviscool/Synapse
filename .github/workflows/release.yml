name: Release

on:
  workflow_dispatch:
    inputs:
      level:
        description: '版本级别 (Version Level)'
        required: true
        type: choice
        options: [patch, minor, major]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create tags and releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # This token is required to push commits and tags
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      # Configure Git user for version bump commit
      - name: Setup Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global core.autocrlf false

      # Bump version, sync manifest.json, and set output
      - name: Bump version & sync manifest
        id: version
        run: |
          bun version ${{ inputs.level }}
          # Extract the new version from package.json
          CLEAN_VER=$(bun --silent run -e "console.log(require('./package.json').version)")
          echo "new_version=$CLEAN_VER" >> $GITHUB_OUTPUT

      # Push the version bump commit and the new tag
      - name: Push changes & tags
        run: |
          git push origin HEAD
          git push origin --tags

      - name: Build & pack extension
        run: |
          bun run build
          bun run pack:zip
          # Rename the zip file to include the version number
          mv dist/dist.zip extension-${{ steps.version.outputs.new_version }}.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release v${{ steps.version.outputs.new_version }}
          files: extension-${{ steps.version.outputs.new_version }}.zip
          generate_release_notes: true


  # This job is disabled but updated to use Bun for future use
  publish-chrome:
    if: false
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build project
        run: bun run build

      - name: Pack extension
        run: bun run pack:zip

      - name: Rename zip
        run: mv dist/dist.zip extension.zip

      - name: Publish to Chrome Web Store
        uses: mobilefirstllc/cws-publish@latest
        with:
          action: publish
          client_id: ${{ secrets.CWS_CLIENT_ID }}
          client_secret: ${{ secrets.CWS_CLIENT_SECRET }}
          refresh_token: ${{ secrets.CWS_REFRESH_TOKEN }}
          extension_id: ${{ secrets.CWS_EXTENSION_ID }}
          zip_file: extension.zip